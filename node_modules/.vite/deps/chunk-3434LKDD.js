import {
  require_react_dom
} from "./chunk-GH7Z2EUS.js";
import {
  HTMLElementType,
  exactProp,
  init_esm,
  require_prop_types,
  setRef,
  useEnhancedEffect_default,
  useForkRef
} from "./chunk-VUG5CUWR.js";
import {
  require_jsx_runtime
} from "./chunk-FEVPAJEA.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __esm,
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@mui/base/Portal/Portal.js
function getContainer(container) {
  return typeof container === "function" ? container() : container;
}
var React, ReactDOM, import_prop_types, import_jsx_runtime, Portal, Portal_default;
var init_Portal = __esm({
  "node_modules/@mui/base/Portal/Portal.js"() {
    React = __toESM(require_react());
    ReactDOM = __toESM(require_react_dom());
    import_prop_types = __toESM(require_prop_types());
    init_esm();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    Portal = React.forwardRef(function Portal2(props, ref) {
      const {
        children,
        container,
        disablePortal = false
      } = props;
      const [mountNode, setMountNode] = React.useState(null);
      const handleRef = useForkRef(React.isValidElement(children) ? children.ref : null, ref);
      useEnhancedEffect_default(() => {
        if (!disablePortal) {
          setMountNode(getContainer(container) || document.body);
        }
      }, [container, disablePortal]);
      useEnhancedEffect_default(() => {
        if (mountNode && !disablePortal) {
          setRef(ref, mountNode);
          return () => {
            setRef(ref, null);
          };
        }
        return void 0;
      }, [ref, mountNode, disablePortal]);
      if (disablePortal) {
        if (React.isValidElement(children)) {
          return React.cloneElement(children, {
            ref: handleRef
          });
        }
        return children;
      }
      return (0, import_jsx_runtime.jsx)(React.Fragment, {
        children: mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode
      });
    });
    true ? Portal.propTypes = {
      children: import_prop_types.default.node,
      container: import_prop_types.default.oneOfType([HTMLElementType, import_prop_types.default.func]),
      disablePortal: import_prop_types.default.bool
    } : void 0;
    if (true) {
      Portal["propTypes"] = exactProp(Portal.propTypes);
    }
    Portal_default = Portal;
  }
});

// node_modules/@mui/base/Portal/index.js
var init_Portal2 = __esm({
  "node_modules/@mui/base/Portal/index.js"() {
    init_Portal();
  }
});

export {
  Portal_default,
  init_Portal2 as init_Portal
};
//# sourceMappingURL=chunk-3434LKDD.js.map
